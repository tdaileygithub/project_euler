#Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
#  find the sum of the even-valued terms.
#
echo off
pkg load symbolic

function fibs = fib_sequence (n)
  fibs= zeros(1,n);
  if 1==n
    fibs(1) = 1;
  elseif 2==n
    fibs(1) = 1;
    fibs(2) = 1;
  else
    fibs(1) = 1;
    fibs(2) = 1;
    for idx=3:n
      fibs(idx) = fibs(idx-2) + fibs(idx-1);
    end
  end
endfunction

function fibn = fib_less_than (fib_less_than)
  fibn  = 0;
  fibv = fibonacci(0);
  done = false;
  while ( !done ) 
    fibv = fibonacci(fibn);
    done = fibv > fib_less_than;
    fibn += 1;
  end
  fibn -= 2;
endfunction

fib_seq_v   = fib_less_than(4000000);
fib_seq     = fib_sequence (fib_seq_v);
disp ( sum( fib_seq( mod(fib_seq,2)==0 )) )

%!test
%! fib_seq_v   = fib_less_than(4000000);
%! fib_seq     = fib_sequence (fib_seq_v);
%! assert(4613732 == sum( fib_seq( mod(fib_seq,2)==0 )) ) 